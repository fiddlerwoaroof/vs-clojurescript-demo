(ns hello-clojurescript.app
  (:require [reagent.core :as r]
            ["@cjdev/visual-stack/lib/global" :as vs-global]
            ["@cjdev/visual-stack/lib/components/Button" :refer [Button]]
            ["@cjdev/visual-stack/lib/components/SideNav" :refer [SideNav]]
            ["@cjdev/visual-stack/lib/layouts/ApplicationLayout" :default Layout]
            ["@cjdev/visual-stack/lib/components/PageHeader" :refer [PageHeader, PageHeaderSection, PageTitle]];
            ["@cjdev/visual-stack/lib/components/PageContent" :default PageContent]
            ["@cjdev/visual-stack/lib/components/Form" :refer [Input]]
            ["@cjdev/visual-stack/lib/components/Panel" :refer [Panel] :rename {Header PanelHeader Body PanelBody}]))

(defonce app-state
  (r/atom {:count {}
           :sideNavState true}))

(defn toggle-side-nav []
  (swap! app-state update-in [:sideNavState] not))

(defn increment [id event]
  (.preventDefault event)
  (swap! app-state update-in [:count id] inc))

(defn decrement [id event]
  (.preventDefault event)
  (swap! app-state update-in [:count id] dec))

(defn reset-count [id event]
  (.preventDefault event)
  (swap! app-state assoc-in [:count id] 0))

(defn header []
  [:div [:h1 "Hello world!"]])

(defn counter [{id :id}]
  [:div
   [:> Button {:type "solid-primary"
               :on-click #(decrement id %)}
    "-"]
   [:> Button {:type "solid-secondary"
               :on-click #(reset-count id %)}
    (get-in @app-state [:count id] 0)]
   [:> Button {:type "solid-primary"
               :on-click #(increment id %)}
    "+"]])

(defn app []
  [:> Layout {:sideNav (r/create-element SideNav #js{:onClick #(toggle-side-nav)
                                                     :collapsed (not (get @app-state :sideNavState))})
              :sideNavState (get @app-state :sideNavState)}
   [:> PageHeader
    [:> PageTitle "This is the title"]]
   [:> PageContent
    [:> Panel
     [:> PanelHeader "foobar"]
     [:> PanelBody
      [counter {:id 1}]]]
    [:> Panel
     [:> PanelHeader "foobar"]
     [:> PanelBody
      [counter {:id 5}]]]
    [:> Panel
     [:> PanelHeader "foobar"]
     [:> PanelBody
      [counter {:id 2}]]]]])

(defn ^:dev/after-load start []
  (r/render-component [app]
                      (.getElementById js/document "root")))

(defn init []
  (start))
